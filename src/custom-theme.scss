@use 'sass:map';
@use '@angular/material' as mat;

$_palettes: (
  primary: (
    0: #000000,
    10: #2d0050,
    20: #4a007f,
    25: #5a0098,
    30: #680eac,
    35: #7524b9,
    40: #8234c6,
    50: #9c51e1,
    60: #b86dfd,
    70: #cb93ff,
    80: #deb7ff,
    90: #f1dbff,
    95: #faecff,
    98: #fff7fe,
    99: #fffbff,
    100: #ffffff,
  ),
  secondary: (
    0: #000000,
    10: #251a00,
    20: #3e2e00,
    25: #4b3900,
    30: #594400,
    35: #684f00,
    40: #765a00,
    50: #947200,
    60: #b48b00,
    70: #d4a500,
    80: #f2c02c,
    90: #ffdf95,
    95: #ffefd1,
    98: #fff8f1,
    99: #fffbff,
    100: #ffffff,
  ),
  tertiary: (
    0: #000000,
    10: #002110,
    20: #003920,
    25: #004528,
    30: #005230,
    35: #005f39,
    40: #006d41,
    50: #008954,
    60: #00a666,
    70: #31c27e,
    80: #55df97,
    90: #74fcb1,
    95: #c1ffd5,
    98: #e9ffed,
    99: #f5fff4,
    100: #ffffff,
  ),
  neutral: (
    0: #000000,
    10: #1b1c1c,
    20: #303031,
    25: #3b3b3c,
    30: #464747,
    35: #525252,
    40: #5e5e5e,
    50: #777777,
    60: #919090,
    70: #acabab,
    80: #c7c6c6,
    90: #e4e2e2,
    95: #f2f0f0,
    98: #fbf9f8,
    99: #fefcfb,
    100: #ffffff,
    4: #0d0e0e,
    6: #131314,
    12: #1f2020,
    17: #292a2a,
    22: #343535,
    24: #393939,
    87: #dbdad9,
    92: #e9e8e7,
    94: #efeded,
    96: #f5f3f3,
  ),
  neutral-variant: (
    0: #000000,
    10: #1b1c1c,
    20: #303030,
    25: #3b3b3b,
    30: #474747,
    35: #525252,
    40: #5f5e5e,
    50: #777777,
    60: #919090,
    70: #acabab,
    80: #c8c6c6,
    90: #e4e2e1,
    95: #f2f0f0,
    98: #fbf9f8,
    99: #fefcfb,
    100: #ffffff,
  ),
  error: (
    0: #000000,
    10: #410003,
    20: #680008,
    25: #7d000c,
    30: #930010,
    35: #a80616,
    40: #ba1a20,
    50: #dd3735,
    60: #ff544e,
    70: #ff8980,
    80: #ffb3ac,
    90: #ffdad6,
    95: #ffedeb,
    98: #fff8f7,
    99: #fffbff,
    100: #ffffff,
  ),
);

$_rest: (
  secondary: map.get($_palettes, secondary),
  neutral: map.get($_palettes, neutral),
  neutral-variant: map.get($_palettes,  neutral-variant),
  error: map.get($_palettes, error),
);

$primary-palette: map.merge(map.get($_palettes, primary), $_rest);
$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);

@function _high-contrast-value($light, $dark, $theme-type) {
  @if ($theme-type == light) {
    @return $light;
  }
  @if ($theme-type == dark) {
    @return $dark;
  }
  @if ($theme-type == color-scheme) {
    @return light-dark(#{$light}, #{$dark});
  }
  
  @error 'Unknown theme-type #{$theme-type}. Expected light, dark, or color-scheme';
}

@mixin high-contrast-overrides($theme-type) {
  @include mat.theme-overrides((
    primary: _high-contrast-value(#440075, #f9ebff, $theme-type),
    on-primary: _high-contrast-value(#ffffff, #000000, $theme-type),
    primary-container: _high-contrast-value(#6b13af, #dbb2ff, $theme-type),
    on-primary-container: _high-contrast-value(#ffffff, #16002b, $theme-type),
    inverse-primary: _high-contrast-value(#deb7ff, #6911ad, $theme-type),
    primary-fixed: _high-contrast-value(#6b13af, #f1dbff, $theme-type),
    primary-fixed-dim: _high-contrast-value(#4d0084, #deb7ff, $theme-type),
    on-primary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-primary-fixed-variant: _high-contrast-value(#ffffff, #1e0038, $theme-type),
    secondary: _high-contrast-value(#392a00, #ffeece, $theme-type),
    on-secondary: _high-contrast-value(#ffffff, #000000, $theme-type),
    secondary-container: _high-contrast-value(#5c4600, #eebc28, $theme-type),
    on-secondary-container: _high-contrast-value(#ffffff, #110a00, $theme-type),
    secondary-fixed: _high-contrast-value(#5c4600, #ffdf95, $theme-type),
    secondary-fixed-dim: _high-contrast-value(#413000, #f2c02c, $theme-type),
    on-secondary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-secondary-fixed-variant: _high-contrast-value(#ffffff, #181000, $theme-type),
    tertiary: _high-contrast-value(#00341d, #bdffd3, $theme-type),
    on-tertiary: _high-contrast-value(#ffffff, #000000, $theme-type),
    tertiary-container: _high-contrast-value(#005532, #50da94, $theme-type),
    on-tertiary-container: _high-contrast-value(#ffffff, #000f05, $theme-type),
    tertiary-fixed: _high-contrast-value(#005532, #74fcb1, $theme-type),
    tertiary-fixed-dim: _high-contrast-value(#003b21, #55df97, $theme-type),
    on-tertiary-fixed: _high-contrast-value(#ffffff, #000000, $theme-type),
    on-tertiary-fixed-variant: _high-contrast-value(#ffffff, #001509, $theme-type),
    background: _high-contrast-value(#fbf9f8, #131314, $theme-type),
    on-background: _high-contrast-value(#1b1c1c, #e4e2e2, $theme-type),
    surface: _high-contrast-value(#fbf9f8, #131314, $theme-type),
    surface-dim: _high-contrast-value(#b9b8b8, #131314, $theme-type),
    surface-bright: _high-contrast-value(#fbf9f8, #505050, $theme-type),
    surface-container-low: _high-contrast-value(#f2f0f0, #1f2020, $theme-type),
    surface-container-lowest: _high-contrast-value(#ffffff, #000000, $theme-type),
    surface-container: _high-contrast-value(#e4e2e2, #303031, $theme-type),
    surface-container-high: _high-contrast-value(#d5d4d4, #3b3b3c, $theme-type),
    surface-container-highest: _high-contrast-value(#c7c6c6, #464747, $theme-type),
    on-surface: _high-contrast-value(#000000, #ffffff, $theme-type),
    shadow: _high-contrast-value(#000000, #000000, $theme-type),
    scrim: _high-contrast-value(#000000, #000000, $theme-type),
    surface-tint: _high-contrast-value(#8234c6, #deb7ff, $theme-type),
    inverse-surface: _high-contrast-value(#303031, #e4e2e2, $theme-type),
    inverse-on-surface: _high-contrast-value(#ffffff, #000000, $theme-type),
    outline: _high-contrast-value(#2c2c2c, #f2efef, $theme-type),
    outline-variant: _high-contrast-value(#494949, #c4c2c2, $theme-type),
    error: _high-contrast-value(#600007, #ffece9, $theme-type),
    on-error: _high-contrast-value(#ffffff, #000000, $theme-type),
    error-container: _high-contrast-value(#980010, #ffaea6, $theme-type),
    on-error-container: _high-contrast-value(#ffffff, #220001, $theme-type),
    surface-variant: _high-contrast-value(#e4e2e1, #474747, $theme-type),
    on-surface-variant: _high-contrast-value(#000000, #ffffff, $theme-type),
  ))
 }

html {
  @include mat.theme((
    color: (
      theme-type: light,
      primary: $primary-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
}